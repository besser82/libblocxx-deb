From: Sascha Peilicke <SPeilicke@suse.com>
Subject: Add patch to make the library use AES-NI or other openssl engines

* configure.in: added check for openssl headers (openssl/engine.h).
* src/blocxx/SSLCtxMgr.cpp: added include and use of openssl engines.

Origin: upstream, https://api.opensuse.org/public/source/openSUSE:Factory/blocxx/blockcxx-openssl.patch?rev=1659906e4d6e276a8c7ee6ceefe976eb&
--- a/configure.in
+++ b/configure.in
@@ -39,7 +39,8 @@
 
 dnl Checks for programs.
 AC_CANONICAL_HOST
-AC_PROG_CC
+AC_PROG_CC_STDC
+AC_USE_SYSTEM_EXTENSIONS
 AC_PROG_CXX
 AC_LANG_C
 #AC_LANG_CPLUSPLUS
@@ -1409,7 +1410,7 @@
 				CPPFLAGS="$saved_CPPFLAGS -I$ssldir"
 			fi
 		fi
- 
+		AC_CHECK_HEADERS([openssl/engine.h])
 		# Basic test to check for compatible version and correct linking
 		# *does not* test for RSA - that comes later.
 		AC_TRY_COMPILE(
--- a/src/blocxx/SSLCtxMgr.cpp
+++ b/src/blocxx/SSLCtxMgr.cpp
@@ -53,6 +53,9 @@
 
 #include <openssl/rand.h>
 #include <openssl/err.h>
+#if defined(BLOCXX_HAVE_OPENSSL_ENGINE_H) && !defined(OPENSSL_NO_ENGINE)
+#include <openssl/engine.h>
+#endif
 #include <cstring>
 #include <csignal>
 #include <cerrno>
@@ -190,6 +193,10 @@
 
 			SSL_library_init();
 			SSL_load_error_strings();
+#if defined(BLOCXX_HAVE_OPENSSL_ENGINE_H) && !defined(OPENSSL_NO_ENGINE)
+            ENGINE_load_builtin_engines();
+            ENGINE_register_all_complete();
+#endif
 		}
 		initLock.release();
 
@@ -326,6 +333,9 @@
 	{
 		BLOCXX_THROW(SSLException, Format("SSLCtxMgr::initCtx(): SSL_CTX_new returned 0: %1", getOpenSSLErrorDescription()).c_str());
 	}
+#ifdef SSL_MODE_RELEASE_BUFFERS
+    SSL_CTX_set_mode(ctx, SSL_MODE_RELEASE_BUFFERS);
+#endif
 	SSL_CTX_set_default_passwd_cb(ctx, pem_passwd_cb);
 	if (!certfile.empty())
 	{
